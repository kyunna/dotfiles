if status is-interactive
    ### Path Configuration ###
    # Add user binary path first to ensure local commands are available
    if test -d ~/.local/bin
        fish_add_path ~/.local/bin
    end

    {{- if and (eq .chezmoi.os "darwin") (lookPath "brew") }}

    ### Platform Initialization ###
    # OS-specific environment setup
    eval "$(/opt/homebrew/bin/brew shellenv)"
    {{- end }}

    ### Basic Tools Configuration ###
    # Default shell
    if type -q fish
        set -gx SHELL (which fish)
    end
    # Editor and common command aliases
    if type -q nvim
        set -gx EDITOR nvim
        alias vim="nvim"
    end
    if type -q lsd
        alias ls="lsd"
    end

    ### SSH Agent Configuration ###
    # 1Password SSH agent setup
    {{- if and (eq .chezmoi.os "darwin") (stat "/Applications/1Password.app") }}
    # macOS: Use 1Password SSH agent
    set -gx SSH_AUTH_SOCK ~/Library/Group Containers/2BUA8C4S2C.com.1password/t/agent.sock
    {{- else if and (eq .chezmoi.os "linux") (lookPath "wslpath") }}
    # WSL: Redirect SSH commands to Windows
    alias ssh="ssh.exe"
    alias ssh-add="ssh-add.exe"
    {{- else if and (eq .chezmoi.os "linux") (not (lookPath "wslpath")) (stat "/opt/1Password/1password") }}
    # Linux: Use 1Password SSH agent
    set -gx SSH_AUTH_SOCK ~/.1password/agent.sock
    {{- end }}

    ### Development Environment Setup ###
    # NVM environment setup
    {{- if and (eq .chezmoi.os "darwin") (lookPath "brew") }}
    set brew_nvm_path (brew --prefix nvm 2>/dev/null)
    if test -f "$brew_nvm_path/nvm.sh"
        set -gx NVM_DIR $brew_nvm_path
        function nvm
            bass source $NVM_DIR/nvm.sh --no-use ';' nvm $argv
        end
        nvm use --lts --silent
    end
    {{- else if and (eq .chezmoi.os "linux") }}
    if test -f ~/.nvm/nvm.sh
        set -gx NVM_DIR ~/.nvm
        function nvm
            bass source $NVM_DIR/nvm.sh --no-use ';' nvm $argv
        end
        nvm use --lts --silent
    end
    {{- end }}

    # Conda environment setup
    {{- if and (eq .chezmoi.os "darwin") (lookPath "brew") }}
    if test -f /opt/homebrew/Caskroom/miniconda/base/bin/conda
        eval /opt/homebrew/Caskroom/miniconda/base/bin/conda "shell.fish" "hook" $argv | source
    else if test -f /opt/homebrew/bin/conda
        eval "/opt/homebrew/bin/conda" "shell.fish" "hook" $argv | source
    end
    {{- else if and (eq .chezmoi.os "linux") }} 
    if test -f ~/miniconda3/bin/conda
        eval "~/miniconda3/bin/conda" "shell.fish" "hook" $argv | source
    else if test -f ~/miniconda3/etc/fish/conf.d/conda.fish
        source ~/miniconda3/etc/fish/conf.d/conda.fish
    else if test -d ~/miniconda3/bin
        set -x PATH ~/miniconda3/bin $PATH
    end
    {{- end }}

    ### Shell Integrations ###
    # Initialize shell enhancements and tools
    if type -q fzf
        fzf --fish | source
        set -gx FZF_DEFAULT_OPTS "--height 40% --layout=reverse --border"
        if type -q fd
            set -gx FZF_DEFAULT_COMMAND "fd --type f --hidden --follow --exclude .git"
        end
        if type -q rg
            set -gx FZF_DEFAULT_COMMAND "rg --files --hidden --follow --glob '!.git'"
        end
    end

    if type -q zoxide
        zoxide init fish | source
    end

    if type -q starship
        starship init fish | source
    end
end
